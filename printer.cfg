#### custom Ender 3 build
##
##  - SKR V1.3 board
##  - stock steppers
##  - TMC2208 drivers in UART mode
##  - BLTouch V3
##  - Ender3 stock display
##  - BMG style extruder
##
########################################
## AnalogBot's Klipper config, modified from VonThing's reddit post

## Originally posted on https://www.reddit.com/r/klippers/comments/csjzid/sample_config_for_ender_3_bltouch_v30_skr_v13/
## (c) VonThing 2019
## Licensed under CC-BY-SA-4.0 https://choosealicense.com/licenses/cc-by-sa-4.0/
## Redistributions MUST include this copyright notice and the same license terms.

#### changelog
# switched to builtin safe z-homing
# disabled power menu
# disabled filament runout sensor
# microsteps from 16 -> 32
# mesh leveling from 3,3 -> 5,5 and centered on bed
# virtual sd card support
# reordered menus
# various calibrations/offsets for my setup
# seperating into multiple config files

# TMC driver specific config
[include klipperconfigs/tmc2208.cfg]

# Machine config
[include klipperconfigs/machine.cfg]

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/klippersdcard

# Custom definition to make the beeper work
[output_pin beeper]
pin: P1.30
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

# Custom GCode macro to make M300 use the beeper that you just defined
[gcode_macro M300]
default_parameter_S: 1000
default_parameter_P: 100
gcode:
    SET_PIN PIN=beeper VALUE={S}
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

# BLTouch V3 (original) running in open drain mode
# SKR 1.3 reference: https://github.com/bigtreetech/BIGTREETECH-SKR-V1.3/blob/master/hardware/SKR-V1.3-PIN.pdf
# BLTouch 3.0 reference: https://docs.wixstatic.com/ugd/f5a1c8_26f2661f0a4542eaacc1586eba8842e7.pdf
# According to this, when the USB is facing towards you, servo pins should be (left to right) colored red (power)-brown (ground)-orange (control pin)
# and the Zmin plug should be (top to bottom) power pin (leave empty), black wire (ground), white wire (sensor pin).

[bltouch]
sensor_pin: ^P1.25   # Pull-up (^ symbol) needed in open drain mode
control_pin: P2.0
# Some BLTouch V3 and many clones apparently require this, though mine didnt:
#pin_up_touch_mode_reports_triggered: False
#pin_move_time: 0.675
pin_move_time: 1
x_offset: -42
y_offset: -5
#z_offset: 1.9
#z_offset: 1.7
speed: 3.0
samples: 3
samples_tolerance: 0.100
samples_tolerance_retries: 1

[safe_z_home]
#center of bed + bltouch offsets (117.5+41,117.5+5)
home_xy_position: 158.5,122.5
#speed: 50.0
z_hop: 10.0
#z_hop_speed: 20.0

# This adds a bed mesh calibrate GCode
[bed_mesh]
speed: 250
horizontal_move_z: 10
min_point: 80,30
max_point: 235,220
probe_count: 5,5

# This adds a screw tilt adjust command that probes certain points on the bed and recommends new bed screw positions (turn clockwise this much etc)
[screws_tilt_adjust]
screw1: 50,50
screw1_name: Front left screw
screw2: 50,215
screw2_name: Rear left screw
screw3: 215,50
screw3_name: Front right screw
screw4: 215,215
screw4_name: Rear right screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M3

# This adds a bed screws adjust GCode, that moves the nozzle around for you so you can paper adjust.
[bed_screws]
screw1: 31,37
screw1_name: Front left screw
screw2: 31,208
screw2_name: Rear left screw
screw3: 201,208
screw3_name: Rear right screw
screw4: 201,37
screw4_name: Front right screw

# Filament switch sensor made out of the leftover Z-stop after BLTouch install
# Wired to X-max stop but you can pick any pin you want.
#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#switch_pin: ^!P1.28

# These two add power supply control G-Code support.
# Octoprint 'PSU control' and 'Action commands' plugins used for this.
# My PSU is connected to a relay, and the relay is connected to a Raspberry Pi GPIO pin.
#[gcode_macro M80]
#gcode:
#    RESPOND action:poweron
#    G4 P1500
#    FIRMWARE_RESTART
#
#[gcode_macro M81]
#gcode:
#    RESPOND TYPE=command MSG=action:poweroff
#

##gcode macros

# Custom G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
# and saves the bed mesh profie to 'bed_mesh'. This mesh can be retrieved later with BED_MESH_PROFILE LOAD=bed_mesh
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X10 Y10 Z10 F6000
    BED_MESH_PROFILE SAVE=bed_mesh
    SAVE_CONFIG

[gcode_macro M108]
gcode:
    TURN_OFF_HEATERS

[gcode_macro START_PRINT]
gcode:
; Ender 3 Custom Start G-code
  G28 ; Home  
  BED_MESH_PROFILE LOAD=bed_mesh ; retrieve bed mesh profile from persistent memory
  M109 S210 ; set temperature and wait for it to be reached
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  ; purge line
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  ; End of custom start GCode

[gcode_macro END_PRINT]
gcode:
  ; Ender 3 Custom End G-code
  G4 ; Wait
  G91 ; Set coordinates to relative
  G1 F1800 E-3 ; Retract filament 3 mm to prevent oozing
  G1 F3000 Z20 ; Move Z Axis up 20 mm 
  G90 ; Set coordinates to absolute
  G1 X0 Y235 F3000 ; Move Bed to the front for easy print removal
  M106 S0 ; Turn-off fan
  M104 S0 ; Turn-off hotend
  M140 S0 ; Turn-off bed
  M84 ; Disable stepper motors
  ; End of custom end GCode

# This adds pause/resume support
[pause_resume]

# This adds the 'respond' G-Code that you can use to send commands back to OctoPrint
[respond]
default_type: echo

# This enables a 'force_move' command ignoring all homing, Z-stops etc. Useful in debugging.
[force_move]
enable_force_move: True

# The following section is to add a 'Calibration' menu item that allows easy access to many calibration settings

# Overwrite the main menu, add a 'power off' item and a 'calibration' submenu
[menu __main]
type: list
name: Main Menu
items:
    __tune
    __control
    __temp
    __filament
    __calibration
    __octoprint
    __sdcard
    __prepare
#    __test
#    __command_power_off

# This sends a power off command to Octoprint that gets picked up by the 'action commands' plug in
#[menu __command_power_off]
#type: command
#name: Power off
#gcode: RESPOND TYPE=command MSG=action:poweroff

[menu __calibration]
type: list
name: Calibration
items:
    __calibration_home_all_axes
    __calibration_bed_screws_adjust
    __calibration_bed_mesh_calibrate
    __calibration_screws_calculate
    __calibration_probe_calibrate
    __calibration_probe_accuracy
    __general_firmware_restart

[menu __calibration_accept]
type: command
name: Accept
gcode: ACCEPT

[menu __calibration_abort]
type: command
name: Abort
gcode: ABORT
action: back

[menu __calibration_screws_calculate]
type: command
name: Screw tilt calculate
gcode:
    G28
    SCREWS_TILT_CALCULATE

[menu __calibration_bed_screws_adjust]
type: list
name: Adjust screws
enter_gcode: 
    G28
    BED_SCREWS_ADJUST
show_back: False
items:
    __calibration_accept
    __calibration_bed_screws_adjust_adjusted
    __calibration_save_config
    __calibration_abort

[menu __calibration_probe_accuracy]
type: command
name: Test accuracy
gcode:
    G28
    G0 X164 Y134 Z10 F6000
    PROBE_ACCURACY 

[menu __calibration_save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __general_firmware_restart]
type: command
name: Restart firmware
gcode: FIRMWARE_RESTART

[menu __calibration_home_all_axes]
type: command
name: Home XYZ
gcode: G28

[menu __calibration_bed_screws_adjust_adjusted]
type: command
name: Adjusted
gcode: ADJUSTED

[menu __calibration_probe_calibrate]
type: list
show_back: False
name: Adjust Z offset
enter_gcode:
    G28
    G0 Z10 F6000
    PROBE_CALIBRATE
items:
    __calibration__toolhead_zpos
    __calibration_probe_calibrate_testz_minus, __calibration_probe_calibrate_testz_plus 
    __calibration_probe_calibrate_testz_minus_minus, __calibration_probe_calibrate_testz_plus_plus
    __calibration_probe_calibrate_testz_minus_1, __calibration_probe_calibrate_testz_plus_1
    __calibration_probe_calibrate_testz_minus_point_1, __calibration_probe_calibrate_testz_plus_point_1
    __calibration_accept
    __calibration_save_config
    __calibration_abort

[menu __calibration__toolhead_zpos]
type: item
width: 16
name: "Z = {0:.3f}"
cursor: \x20
parameter: toolhead.zpos

[menu __calibration_probe_calibrate_testz_minus]
cursor: \x20
type: command
width: 7
name: "   -"
gcode: TESTZ Z=-

[menu __calibration_probe_calibrate_testz_plus]
cursor: \x20
type: command
name: "   +"
width: 7
gcode: TESTZ Z=+

[menu __calibration_probe_calibrate_testz_minus_minus]
cursor: \x20
type: command
name: "   --"
width: 7
gcode: TESTZ Z=--

[menu __calibration_probe_calibrate_testz_plus_plus]
cursor: \x20
type: command
name: "   ++"
width: 7
gcode: TESTZ Z=++

[menu __calibration_probe_calibrate_testz_minus_1]
cursor: \x20
type: command
name: "  -1.0"
width: 7
gcode: TESTZ Z=-1

[menu __calibration_probe_calibrate_testz_plus_1]
cursor: \x20
type: command
name: "  +1.0"
width: 7
gcode: TESTZ Z=+1

[menu __calibration_probe_calibrate_testz_minus_point_1]
cursor: \x20
type: command
name: "  -0.1"
width: 7
gcode: TESTZ Z=-0.1

[menu __calibration_probe_calibrate_testz_plus_point_1]
cursor: \x20
type: command
name: "  +0.1"
width: 7
gcode: TESTZ Z=+0.1

[menu __calibration_bed_mesh_calibrate]
type: deck
name: Generate bed mesh
width: 18
show_back: False
enter_gcode:
    G28
    BED_MESH_CALIBRATE
    SAVE_CONFIG
items:
    __calibration_card_bed_mesh

[menu __calibration_card_bed_mesh]
type: card
name: Calibration card
content:
    "{0}"
    ""
    "   Will reboot"
    "  when complete"
items:
    __calibration_bed_mesh_calibrate_text_1

[menu __calibration_bed_mesh_calibrate_text_1]
type: item
name: "  [In progress]"
cursor: \x20

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# points =
#*# 	  -0.075833, -0.072500, -0.055000, -0.007083, -0.056250
#*# 	  -0.052917, -0.021250, -0.001250, 0.054167, 0.000833
#*# 	  -0.038333, -0.017917, -0.003333, 0.044167, -0.005417
#*# 	  -0.017083, -0.033333, -0.009167, 0.040417, -0.011250
#*# 	  -0.062917, -0.087917, -0.063750, -0.042500, -0.051250
#*# x_count = 5
#*# y_count = 5
#*# min_x = 80.0
#*# max_x = 235.0
#*# min_y = 30.0
#*# max_y = 220.0
#*# x_offset = -42.0
#*# y_offset = -5.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*#
#*# [bltouch]
#*# z_offset = 1.7
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.523
#*# pid_ki = 1.406
#*# pid_kd = 115.809
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.556
#*# pid_ki = 1.503
#*# pid_kd = 781.537
#*#
#*# [bed_mesh bed_mesh]
#*# points =
#*# 	  -0.075833, -0.072500, -0.055000, -0.007083, -0.056250
#*# 	  -0.052917, -0.021250, -0.001250, 0.054167, 0.000833
#*# 	  -0.038333, -0.017917, -0.003333, 0.044167, -0.005417
#*# 	  -0.017083, -0.033333, -0.009167, 0.040417, -0.011250
#*# 	  -0.062917, -0.087917, -0.063750, -0.042500, -0.051250
#*# x_count = 5
#*# y_count = 5
#*# min_x = 80.0
#*# max_x = 235.0
#*# min_y = 30.0
#*# max_y = 220.0
#*# x_offset = -42.0
#*# y_offset = -5.0
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
